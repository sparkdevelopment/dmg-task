{"version":3,"file":"dmg-task/metadata-sync.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNyD;AACV;AAE/C,MAAMG,oBAAoB,GAAGA,CAAA,KAAM;EAC/B;EACA;EACA,MAAM;IAAEC,WAAW;IAAEC;EAAO,CAAC,GAAGL,0DAAS,CAAEM,MAAM,IAAK;IAClD,MAAMC,MAAM,GAAGD,MAAM,CAAC,mBAAmB,CAAC,CAACE,SAAS,CAAC,CAAC;IACtD,MAAMC,KAAK,GAAGF,MAAM,CAACG,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,KAAK,wBAAwB,CAAC,CAACC,MAAM;IACtF,MAAMC,EAAE,GAAGR,MAAM,CAAC,aAAa,CAAC,CAACS,gBAAgB,CAAC,CAAC;IACnD,OAAO;MAAEX,WAAW,EAAEK,KAAK;MAAEJ,MAAM,EAAES;IAAG,CAAC;EAC7C,CAAC,CAAC;EAEF,MAAM;IAAEE;EAAS,CAAC,GAAGf,4DAAW,CAAC,aAAa,CAAC;;EAE/C;EACAC,6DAAS,CAAC,MAAM;IACZ,IAAI,CAACG,MAAM,EAAE;IACb,IAAID,WAAW,GAAG,CAAC,EAAE;MACjB;MACAY,QAAQ,CAAC;QAAEC,IAAI,EAAE;UAAEC,sBAAsB,EAAE;QAAK;MAAE,CAAC,CAAC;IACxD,CAAC,MAAM;MACH;MACA;MACAF,QAAQ,CAAC;QAAEC,IAAI,EAAE;UAAEC,sBAAsB,EAAE;QAAK;MAAE,CAAC,CAAC;IACxD;EACJ,CAAC,EAAE,CAACd,WAAW,EAAEC,MAAM,CAAC,CAAC;EAEzB,OAAO,IAAI;AACf,CAAC;AAED,iEAAeF,oBAAoB,E","sources":["webpack://dmg-task/external window [\"wp\",\"data\"]","webpack://dmg-task/external window [\"wp\",\"element\"]","webpack://dmg-task/webpack/bootstrap","webpack://dmg-task/webpack/runtime/compat get default export","webpack://dmg-task/webpack/runtime/define property getters","webpack://dmg-task/webpack/runtime/hasOwnProperty shorthand","webpack://dmg-task/webpack/runtime/make namespace object","webpack://dmg-task/./src/dmg-task/metadata-sync.js"],"sourcesContent":["module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\n\nconst StylisedLinkMetaSync = () => {\n    // Get the number of blocks of type 'dmg-task/stylised-link' in the current post\n    // and the current post ID\n    const { blocksCount, postId } = useSelect((select) => {\n        const blocks = select('core/block-editor').getBlocks();\n        const count = blocks.filter((block) => block.name === 'dmg-task/stylised-link').length;\n        const id = select('core/editor').getCurrentPostId();\n        return { blocksCount: count, postId: id };\n    });\n\n    const { editPost } = useDispatch('core/editor');\n\n    // Update the post meta when the number of blocks changes\n    useEffect(() => {\n        if (!postId) return;\n        if (blocksCount > 0) {\n            // If there are any blocks, set the meta field to true\n            editPost({ meta: { _dmg_has_stylised_link: true } });\n        } else {\n            // If there are no blocks, set the meta field to null\n            // to remove the meta field\n            editPost({ meta: { _dmg_has_stylised_link: null } });\n        }\n    }, [blocksCount, postId]);\n\n    return null;\n};\n\nexport default StylisedLinkMetaSync;"],"names":["useSelect","useDispatch","useEffect","StylisedLinkMetaSync","blocksCount","postId","select","blocks","getBlocks","count","filter","block","name","length","id","getCurrentPostId","editPost","meta","_dmg_has_stylised_link"],"sourceRoot":""}